{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\TCC\\\\2020-1-selosocial\\\\Mobile.Ui\\\\src\\\\pages\\\\Login\\\\index.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Styles from \"./styles\";\nimport * as Auth from \"../../services/auth\";\nimport { LinearGradient } from 'expo-linear-gradient';\nexport default function Login(_ref, props) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(new Animated.ValueXY({\n    x: 0,\n    y: 95\n  })),\n      _useState2 = _slicedToArray(_useState, 1),\n      offset = _useState2[0];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      opacity = _useState4[0];\n\n  var _useState5 = useState(new Animated.ValueXY({\n    x: 250,\n    y: 280\n  })),\n      _useState6 = _slicedToArray(_useState5, 1),\n      logo = _useState6[0];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  function signIn() {\n    var access_token;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email == '' || password == '')) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert('Atenção!', 'É necessário preencher o campo de E-mail e Senha.');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Auth.signInAsync(email, password));\n\n          case 5:\n            access_token = _context.sent;\n            if (access_token != null) navigation.navigate(\"Home\");\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(LinearGradient, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    colors: ['#7BD94A', '#199559', '#1C7F63'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: Styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: Styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: Styles.containerLogo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Animated.Image, {\n    style: {\n      width: 150,\n      height: 140\n    },\n    source: require(\"../../../src/assets/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: Styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: Styles.input,\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    placeholder: \"E-mail\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    style: Styles.input,\n    placeholder: \"Senha\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: Styles.btnSubmit,\n    onPress: signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Styles.submitText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Acessar\"))), React.createElement(TouchableOpacity, {\n    style: Styles.btnReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Styles.esqueciMinhaSenhaText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Esqueci minha senha?\"))), React.createElement(View, {\n    style: Styles.CreateAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: Styles.btnRegister,\n    onPress: function onPress() {\n      navigation.navigate(\"CreateAccount\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Styles.registerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Cadastre-se no Abra\\xE7a\\xED\")))));\n}","map":{"version":3,"sources":["D:/TCC/2020-1-selosocial/Mobile.Ui/src/pages/Login/index.js"],"names":["React","useState","useEffect","Component","Styles","Auth","LinearGradient","Login","props","navigation","Animated","ValueXY","x","y","offset","Value","opacity","logo","email","setEmail","password","setPassword","signIn","Alert","alert","signInAsync","access_token","navigate","flex","alignItems","background","main","containerLogo","width","height","require","container","input","btnSubmit","submitText","btnReset","esqueciMinhaSenhaText","CreateAccount","btnRegister","registerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;;;;;;AAaA,OAAOC,MAAP;AAEA,OAAO,KAAKC,IAAZ;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,eAAe,SAASC,KAAT,OAA+BC,KAA/B,EAAsC;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;;AAAA,kBAGlCR,QAAQ,CAAC,IAAIS,QAAQ,CAACC,OAAb,CAAqB;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAArB,CAAD,CAH0B;AAAA;AAAA,MAG5CC,MAH4C;;AAAA,mBAIjCb,QAAQ,CAAC,IAAIS,QAAQ,CAACK,KAAb,CAAmB,CAAnB,CAAD,CAJyB;AAAA;AAAA,MAI5CC,OAJ4C;;AAAA,mBAKpCf,QAAQ,CAAC,IAAIS,QAAQ,CAACC,OAAb,CAAqB;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb,GAArB,CAAD,CAL4B;AAAA;AAAA,MAK5CI,IAL4C;;AAAA,mBAOzBhB,QAAQ,CAAC,EAAD,CAPiB;AAAA;AAAA,MAO5CiB,KAP4C;AAAA,MAOrCC,QAPqC;;AAAA,mBAQnBlB,QAAQ,CAAC,EAAD,CARW;AAAA;AAAA,MAQ5CmB,QAR4C;AAAA,MAQlCC,WARkC;;AAUnD,WAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMJ,KAAK,IAAI,EAAT,IAAeE,QAAQ,IAAI,EADjC;AAAA;AAAA;AAAA;;AAEIG,YAAAA,KAAK,CAACC,KAAN,CAAY,UAAZ,EAAwB,mDAAxB;AAFJ;;AAAA;AAAA;AAAA,6CAM6BnB,IAAI,CAACoB,WAAL,CAAiBP,KAAjB,EAAwBE,QAAxB,CAN7B;;AAAA;AAMQM,YAAAA,YANR;AAQE,gBAAIA,YAAY,IAAI,IAApB,EACEjB,UAAU,CAACkB,QAAX,CAAoB,MAApB;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE;AAAvB,KADT;AAEE,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEzB,MAAM,CAAC0B,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,KAAV;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KADT;AAKE,IAAA,MAAM,EAAEC,OAAO,gCALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACgC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEhC,MAAM,CAACiC,KADhB;AAEE,IAAA,YAAY,EAAC,eAFf;AAGE,IAAA,cAAc,EAAC,MAHjB;AAIE,IAAA,WAAW,EAAC,QAJd;AAKE,IAAA,WAAW,EAAE,KALf;AAME,IAAA,YAAY,EAAE,sBAAAnB,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,cAAc,EAAC,MAFjB;AAGE,IAAA,KAAK,EAAEd,MAAM,CAACiC,KAHhB;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,WAAW,EAAE,KALf;AAME,IAAA,YAAY,EAAE,sBAAAjB,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAoBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEhB,MAAM,CAACkC,SAAhC;AAA2C,IAAA,OAAO,EAAEhB,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CApBF,CAbF,EAuCE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEnC,MAAM,CAACoC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACqC,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAvCF,CAFF,EA+CE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErC,MAAM,CAACsC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEtC,MAAM,CAACuC,WAAhC;AAA6C,IAAA,OAAO,EAAE,mBAAM;AAAElC,MAAAA,UAAU,CAACkB,QAAX,CAAoB,eAApB;AAAsC,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,CA/CF,CALF,CADF;AA2HD","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { Alert } from 'react-native'\r\nimport {\r\n  KeyboardAvoidingView,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  ScrollView,\r\n  Animated,\r\n  Keyboard\r\n} from 'react-native';\r\n\r\nimport Styles from './styles';\r\n\r\nimport * as Auth from '../../services/auth';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nexport default function Login({ navigation }, props) {\r\n\r\n\r\n  const [offset] = useState(new Animated.ValueXY({ x: 0, y: 95 }))\r\n  const [opacity] = useState(new Animated.Value(0))\r\n  const [logo] = useState(new Animated.ValueXY({ x: 250, y: 280 }))\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  async function signIn() {\r\n    if (email == '' || password == '') {\r\n      Alert.alert('Atenção!', 'É necessário preencher o campo de E-mail e Senha.');\r\n      return;\r\n    }\r\n\r\n    const access_token = await Auth.signInAsync(email, password);\r\n\r\n    if (access_token != null)\r\n      navigation.navigate(\"Home\")\r\n  }\r\n\r\n  return (\r\n    <LinearGradient\r\n      style={{ flex: 1, alignItems: 'center' }}\r\n      colors={['#7BD94A', '#199559', '#1C7F63']}\r\n\r\n    >\r\n      <KeyboardAvoidingView style={Styles.background}>\r\n\r\n        <View style={Styles.main}>\r\n          <View style={Styles.containerLogo}>\r\n            <Animated.Image\r\n              style={{\r\n                width: 150,\r\n                height: 140\r\n              }}\r\n              source={require('../../../src/assets/logo.png')}\r\n            />\r\n          </View>\r\n\r\n\r\n\r\n          <View style={Styles.container}>\r\n\r\n            <TextInput\r\n              style={Styles.input}\r\n              keyboardType='email-address'\r\n              autoCapitalize='none'\r\n              placeholder=\"E-mail\"\r\n              autoCorrect={false}\r\n              onChangeText={email => setEmail(email)}\r\n            />\r\n\r\n            <TextInput\r\n              secureTextEntry={true}              \r\n              autoCapitalize='none'\r\n              style={Styles.input}\r\n              placeholder=\"Senha\"\r\n              autoCorrect={false}\r\n              onChangeText={password => setPassword(password)}\r\n            />\r\n\r\n            <TouchableOpacity style={Styles.btnSubmit} onPress={signIn}>\r\n              <Text style={Styles.submitText}>Acessar</Text>\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n\r\n          <TouchableOpacity style={Styles.btnReset}>\r\n            <Text style={Styles.esqueciMinhaSenhaText}>Esqueci minha senha?</Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n\r\n        <View style={Styles.CreateAccount}>\r\n          <TouchableOpacity style={Styles.btnRegister} onPress={() => { navigation.navigate(\"CreateAccount\") }}>\r\n            <Text style={Styles.registerText}>Cadastre-se no Abraçaí</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </KeyboardAvoidingView>\r\n    </LinearGradient>\r\n\r\n\r\n    // <KeyboardAvoidingView behavior=\"height\" style={Styles.background}>\r\n    //   <LinearGradient\r\n    //     style={{ flex: 1, width: '100%', alignItems: 'center' }}\r\n    //     colors={['#7BD94A', '#199559', '#1C7F63']}\r\n    //     start={{ x: 0, y: 0 }}\r\n    //     end={{ x: 1, y: 0 }}\r\n    //   >\r\n\r\n    //     <View style={Styles.container}>\r\n\r\n    //       <View style={Styles.box}>\r\n\r\n    //         <View style={Styles.logo}>\r\n    //           <Animated.Image\r\n    //             style={{\r\n    //               width: 150,\r\n    //               height: 141\r\n    //             }}\r\n    //             source={require('../../../src/assets/logo.png')}\r\n    //           />\r\n    //         </View>\r\n\r\n\r\n    //         <TextInput\r\n    //           style={Styles.input}\r\n    //           autoCapitalize='none'\r\n    //           placeholder=\"E-mail\"\r\n    //           autoCorrect={false}\r\n    //           onChangeText={email => setEmail(email)}\r\n    //         />\r\n\r\n    //         <TextInput\r\n    //           secureTextEntry={true}\r\n    //           autoCapitalize='none'\r\n    //           style={Styles.input}\r\n    //           placeholder=\"Senha\"\r\n    //           autoCorrect={false}\r\n    //           onChangeText={password => setPassword(password)}\r\n    //         />\r\n\r\n\r\n    //         <TouchableOpacity style={Styles.btnSubmit} onPress={signIn}>\r\n    //           <Text style={Styles.submitText}>Acessar</Text>\r\n    //         </TouchableOpacity>\r\n\r\n    //         <TouchableOpacity style={Styles.btnRegister}>\r\n    //           <Text style={Styles.esqueciMinhaSenhaText}>Esqueci minha senha?</Text>\r\n    //         </TouchableOpacity>\r\n    //       </View>\r\n\r\n    //     </View>\r\n    //     <View style={Styles.CreateAccount}>\r\n    //       <TouchableOpacity style={Styles.btnRegister} onPress={() => { navigation.navigate(\"CreateAccount\") }}>\r\n    //         <Text style={Styles.registerText}>Cadastre-se no Abraçaí</Text>\r\n    //       </TouchableOpacity>\r\n    //     </View>\r\n\r\n    //   </LinearGradient>\r\n    // </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\n\r\n// import React, { useState, useEffect, Component } from 'react';\r\n// import { Alert } from 'react-native'\r\n// import {\r\n//   KeyboardAvoidingView,\r\n//   View,\r\n//   TextInput,\r\n//   TouchableOpacity,\r\n//   Text,\r\n//   Animated,\r\n//   Keyboard\r\n// } from 'react-native';\r\n\r\n// import Styles from './styles';\r\n\r\n// import * as Auth from '../../services/auth';\r\n\r\n// export default function Login({ navigation }, props) {\r\n\r\n\r\n//   const [offset] = useState(new Animated.ValueXY({ x: 0, y: 95 }))\r\n//   const [opacity] = useState(new Animated.Value(0))\r\n//   const [logo] = useState(new Animated.ValueXY({ x: 250, y: 280 }))\r\n\r\n//   const [email, setEmail] = useState('')\r\n//   const [password, setPassword] = useState('')\r\n\r\n//   async function signIn() {\r\n//     if (email == '' || password == '') {\r\n//       Alert.alert('Atenção!', 'É necessário preencher o campo de E-mail e Senha.');\r\n//       return;\r\n//     }\r\n\r\n//     const access_token = await Auth.signInAsync(email, password);\r\n\r\n//     if (access_token != null)\r\n//       navigation.navigate(\"Home\")\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', keyboardDidShow)\r\n//     keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', keyboardDidHide)\r\n\r\n//     Animated.parallel([\r\n//       Animated.spring(offset.y, {\r\n//         toValue: 0,\r\n//         speed: 4,\r\n//         bounciness: 30\r\n//       }),\r\n//       Animated.timing(opacity, {\r\n//         toValue: 1,\r\n//         duration: 200\r\n//       })\r\n//     ]).start();\r\n//   }, []);\r\n\r\n//   function keyboardDidShow() {\r\n\r\n//     Animated.parallel([\r\n//       Animated.timing(logo.x, {\r\n//         toValue: 195,\r\n//         duration: 100\r\n//       })\r\n//     ]).start();\r\n\r\n//     Animated.parallel([\r\n//       Animated.timing(logo.y, {\r\n//         toValue: 225,\r\n//         duration: 100\r\n//       })\r\n//     ]).start();\r\n\r\n//   }\r\n\r\n//   function keyboardDidHide() {\r\n\r\n//     Animated.parallel([\r\n//       Animated.timing(logo.x, {\r\n//         toValue: 250,\r\n//         duration: 100\r\n//       })\r\n//     ]).start();\r\n\r\n//     Animated.parallel([\r\n//       Animated.timing(logo.y, {\r\n//         toValue: 280,\r\n//         duration: 100\r\n//       })\r\n//     ]).start();\r\n//   }\r\n\r\n//   return (\r\n//     <KeyboardAvoidingView behavior=\"height\" style={Styles.background}>\r\n\r\n//       <View style={Styles.containerLogo}>\r\n//         <Animated.Image\r\n//           style={{\r\n//             width: logo.x,\r\n//             height: logo.y\r\n//           }}\r\n//           source={require('../../../src/assets/logo.jpg')}\r\n//         />\r\n//       </View>\r\n\r\n//       <Animated.View\r\n//         style={[\r\n//           Styles.container,\r\n//           {\r\n//             opacity: opacity,\r\n//             transform: [\r\n//               { translateY: offset.y }\r\n//             ]\r\n//           }\r\n//         ]}>\r\n\r\n//         <TextInput\r\n//           style={Styles.input}\r\n//           autoCapitalize='none'\r\n//           placeholder=\"E-mail\"\r\n//           autoCorrect={false}\r\n//           onChangeText={email => setEmail(email)}\r\n//         />\r\n\r\n//         <TextInput\r\n//           secureTextEntry={true}\r\n//           autoCapitalize='none'\r\n//           style={Styles.input}\r\n//           placeholder=\"Senha\"\r\n//           autoCorrect={false}\r\n//           onChangeText={password => setPassword(password)}\r\n//         />\r\n\r\n\r\n//         <TouchableOpacity style={Styles.btnSubmit} onPress={signIn}>\r\n//           <Text style={Styles.submitText}>Acessar</Text>\r\n//         </TouchableOpacity>\r\n\r\n//         <TouchableOpacity style={Styles.btnRegister} onPress={() => { navigation.navigate(\"CreateAccount\") }}>\r\n//           <Text style={Styles.registerText}>Criar Conta</Text>\r\n//         </TouchableOpacity>\r\n\r\n//       </Animated.View>\r\n\r\n//     </KeyboardAvoidingView>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}