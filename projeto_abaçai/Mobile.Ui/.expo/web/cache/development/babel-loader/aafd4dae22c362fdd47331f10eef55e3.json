{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\TCC\\\\2020-1-selosocial\\\\Mobile.Ui\\\\src\\\\pages\\\\Ods\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Api } from \"../../services/api\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { navigation } from '@react-navigation/native';\nimport s from \"./style\";\nimport img from \"./odsImage\";\nimport { Feather } from '@expo/vector-icons';\nvar numColumns = 3;\n\nvar Ods = function (_Component) {\n  _inherits(Ods, _Component);\n\n  var _super = _createSuper(Ods);\n\n  function Ods() {\n    var _this;\n\n    _classCallCheck(this, Ods);\n\n    _this = _super.call(this);\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n\n      if (item.empty) {\n        return React.createElement(View, {\n          style: s.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }\n        }, React.createElement(View, {\n          style: s.itemInvisible,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 46\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: s.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate('DetalhesOds', {\n            data: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: s.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: img.obs[item.imageName],\n        style: s.cardOds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }))));\n    };\n\n    _this.state = {\n      isLoading: true,\n      resultData: []\n    };\n    return _this;\n  }\n\n  _createClass(Ods, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      new Api(\"Ods\").get().then(function (data) {\n        var dataList = data.dataList;\n        var totalRows = Math.floor(dataList.length / numColumns);\n        var totalLastRow = dataList.length - totalRows * numColumns;\n\n        while (totalLastRow !== numColumns) {\n          dataList.push({\n            key: 'blank',\n            empty: true\n          });\n          totalLastRow++;\n        }\n\n        _this2.setState({\n          isLoading: false,\n          resultData: dataList\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: s.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: s.btnHome,\n        onPress: function onPress() {\n          _this3.props.navigation.navigate('Perfil');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 10\n        }\n      }, React.createElement(Feather, {\n        name: \"arrow-left-circle\",\n        size: 22,\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      })), React.createElement(Text, {\n        style: s.titulo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }\n      }, \"ODS\"), React.createElement(FlatList, {\n        data: this.state.resultData,\n        renderItem: this._renderItem,\n        style: s.listaProjetos,\n        numColumns: numColumns,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 10\n        }\n      }));\n    }\n  }]);\n\n  return Ods;\n}(Component);\n\nexport { Ods as default };","map":{"version":3,"sources":["D:/TCC/2020-1-selosocial/Mobile.Ui/src/pages/Ods/index.js"],"names":["React","Component","Api","navigation","s","img","Feather","numColumns","Ods","_renderItem","item","index","empty","container","itemInvisible","props","navigate","data","cards","obs","imageName","cardOds","state","isLoading","resultData","get","then","dataList","totalRows","Math","floor","length","totalLastRow","push","key","setState","btnHome","titulo","listaProjetos","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Api } from '../../services/api';\r\nimport { Text, View, Image, TouchableOpacity,FlatList, Dimensions } from 'react-native';\r\nimport { navigation } from '@react-navigation/native';\r\nimport s from './style';\r\nimport img from './odsImage';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\n\r\nconst numColumns = 3;\r\n\r\nexport default class Ods extends Component{\r\n      constructor(){\r\n        super();\r\n        this.state ={\r\n          isLoading: true,\r\n          resultData: [],\r\n        }\r\n      }\r\n      componentDidMount(){\r\n         new Api(\"Ods\").get().then(data => {\r\n          var dataList = data.dataList;\r\n\r\n          const totalRows = Math.floor(dataList.length / numColumns)\r\n          let totalLastRow = dataList.length - (totalRows * numColumns)\r\n\r\n          while(totalLastRow !== numColumns){\r\n            dataList.push({key: 'blank', empty: true});\r\n            totalLastRow++\r\n          }\r\n          \r\n          this.setState({\r\n            isLoading:false,\r\n            resultData: dataList\r\n          })\r\n        })\r\n\r\n        \r\n      }\r\n\r\n    _renderItem = ({item, index}) => {\r\n      if(item.empty){\r\n            return <View style={s.container}><View style={s.itemInvisible}/></View>\r\n        }\r\n        return (\r\n        <View style={s.container}>\r\n            <TouchableOpacity onPress={()=>{this.props.navigation.navigate('DetalhesOds',{data: item})}}>\r\n                <View style={s.cards}>\r\n                  <Image source={img.obs[item.imageName]} style={s.cardOds}/>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n        )\r\n      }\r\n\r\n    render() {\r\n     return (\r\n        <View style={s.container}>\r\n         <TouchableOpacity style={s.btnHome} onPress={() => {this.props.navigation.navigate('Perfil');}}>\r\n                <Feather name='arrow-left-circle' size={22} color='green'></Feather>\r\n         </TouchableOpacity>\r\n         <Text style={s.titulo}>ODS</Text>\r\n\r\n         <FlatList \r\n            data={this.state.resultData}\r\n            renderItem={this._renderItem}\r\n            style={s.listaProjetos}\r\n            numColumns={numColumns}\r\n            keyExtractor={(item, index)=> index.toString()}\r\n            />\r\n        </View>\r\n      )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}